{"version":3,"sources":["./src/app/enquiry/enquiry.component.ts","./src/app/enquiry/enquiry.component.html","./src/app/shared/services/store-info.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth-service.service.ts","./src/app/enquiry/enquiry-list/enquiry-list.component.ts","./src/app/enquiry/enquiry-list/enquiry-list.component.html","./src/app/services/services.component.ts","./src/app/services/services.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/enquiry/enquiry-form/enquiry-form.component.ts","./src/app/enquiry/enquiry-form/enquiry-form.component.html","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/enquiry/enquiry.service.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthServiceService } from '../auth/auth-service.service';\n\n@Component({\n  selector: 'app-enquiry',\n  templateUrl: './enquiry.component.html',\n  styleUrls: ['./enquiry.component.css']\n})\nexport class EnquiryComponent implements OnInit {\n  \n  userIsAuthenticated = false;\n  authStatusSubs: Subscription;\n\n  constructor(private authService: AuthServiceService) { }\n\n  ngOnInit(): void {\n    this.userIsAuthenticated = this.authService.getAuthStatus()\n    this.authStatusSubs = this.authService.getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated\n      })\n  }\n\n}\n","<div class=\"enquiry-container\">\n    <div class=\"enquiry-form\">\n        <app-enquiry-form></app-enquiry-form>\n    </div>\n    <div class=\"enquiry-list\" *ngIf=\"userIsAuthenticated\">\n        <app-enquiry-list></app-enquiry-list>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\nexport interface Tile {\n  id: number,\n  class: string,\n  cols: number,\n  rows: number,\n  text: string,\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreInfoService {\n\n  tiles: Tile[] = [\n    {id: 1, text: 'One', cols: 3, rows: 1, class: 'one-tile'},\n    {id: 2, text: 'Two', cols: 1, rows: 2, class: 'two-tile'},\n    {id: 3, text: 'Three', cols: 1, rows: 1, class: 'three-tile'},\n    {id: 4, text: 'Four', cols: 2, rows: 1, class: 'four-tile'},\n  ];\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core'\nimport { StoreInfoService, Tile } from '../shared/services/store-info.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private storeInfo: StoreInfoService) { }\n  tiles: Tile[] = []\n\n  ngOnInit(): void {\n    this.tiles = this.storeInfo.tiles\n  }\n\n}\n","<!-- <mat-grid-list cols=\"4\" rowHeight=\"280px\" gutterSize=\"5px\">\n  <mat-grid-tile colspan=\"3\" rowspan=\"1\">\n    <img class=\"tile-image\" src=\"https://images.unsplash.com/photo-1597401989360-07ff2c24c8d2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80\" alt=\"\">\n    <div class=\"text\">Calligraphy</div>\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n    <img class=\"tile-image\" src=\"https://image.shutterstock.com/z/stock-vector-magic-forest-pattern-printable-wall-art-magic-forest-vector-illustration-flower-sketch-doodle-1668344236.jpg\" alt=\"\">\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <img class=\"tile-image\" src=\"https://cdn.pixabay.com/photo/2015/03/01/05/15/abacus-654358_960_720.jpg\" alt=\"\">\n  </mat-grid-tile>\n  <mat-grid-tile colspan=\"2\" rowspan=\"1\">\n    <img class=\"tile-image\" src=\"https://image.shutterstock.com/z/stock-photo-pupil-dressed-up-as-teacher-holding-abacus-in-a-classroom-309236516.jpg\" alt=\"\">\n  </mat-grid-tile>\n</mat-grid-list> -->\n\n<div class=\"container\">\n  <div class=\"image-container\">\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthServiceService } from './auth-service.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthServiceService) {}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const authToken = this.authService.getToken()\r\n        const authRequest = req.clone({\r\n            headers: req.headers.set('Authorization', 'Bearer ' + authToken)\r\n        })\r\n        return next.handle(authRequest)\r\n    } \r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { AuthData, LoginData } from './authdata.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  token: string;\n  isAuthenticated = false;\n  tokenTimer;\n  private authStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  register(firstName: string, lastName: string, email: string, password: string) {\n    const authData: AuthData = {firstName: firstName, lastName: lastName, email: email, password: password}\n    this.http.post('http://localhost:3000/user/register', authData)\n      .subscribe(response => {\n        console.log(response)\n      })\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable()\n  }\n\n  getAuthStatus() {\n    return this.isAuthenticated;\n  }\n\n  login(email: string, password: string) {\n    const loginData: LoginData = {email: email, password: password}\n    this.http.post<{token: string, expiresIn: number}>('http://localhost:3000/user/login', loginData)\n      .subscribe(response => {\n        const token = response.token\n        this.token = token\n        if(token) {\n          const expiryDuration = response.expiresIn\n          this.setAuthTimer(expiryDuration)\n          const now = new Date()\n          const expirationDate = new Date(now.getTime() + expiryDuration * 3000)\n          this.isAuthenticated = true;\n          this.saveAuthData(token, expirationDate, this.isAuthenticated)\n          this.authStatusListener.next(true)\n          this.router.navigate(['/'])\n        }\n      })\n  }\n\n  getToken() {\n    return this.token\n  }\n\n  autoAuthUser() {\n    const authInfo = this.getAuthData()\n    if(!authInfo) {\n      return;\n    }\n    const now = new Date()\n    const expiresIn = now.getTime() - authInfo.expirationDate.getTime()\n    console.log(expiresIn)\n    if(expiresIn > 0) {\n    this.token = authInfo.token\n    console.log(authInfo)\n    \n    this.setAuthTimer(expiresIn / 1000)\n    this.isAuthenticated = authInfo.isAuthenticated == 'true' ? true : false;\n    this.authStatusListener.next(true)\n    this.saveAuthData(this.token, authInfo.expirationDate, this.isAuthenticated)\n    }\n  }\n\n\n  public saveAuthData(token: string, expirationDate: Date, isAuthenticated: boolean ) {\n    localStorage.setItem('token', token)\n    localStorage.setItem('expiresIn', expirationDate.toISOString())\n    localStorage.setItem('isAuthenticated', 'true')\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token')\n    localStorage.removeItem('expiresIn')\n    localStorage.removeItem('isAuthenticated')\n  }\n\n  setAuthTimer(duration: number) {\n    console.log('duration ' + duration)\n    this.tokenTimer = setTimeout(() => {\n      this.logout()\n    }, duration * 1000)\n  }\n\n  getAuthData() {\n    const token = localStorage.getItem('token')\n    const expirationDate = localStorage.getItem('expiration')\n    const isAuthenticated = localStorage.getItem('isAuthenticated')\n    if(!token && !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      isAuthenticated: isAuthenticated\n      \n    }\n  }\n\n  logout() {\n    this.token = null\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false)\n    clearTimeout(this.tokenTimer)\n    this.clearAuthData()\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { EnquiryService } from '../enquiry.service';\n\n\n@Component({\n  selector: 'app-enquiry-list',\n  templateUrl: './enquiry-list.component.html',\n  styleUrls: ['./enquiry-list.component.css']\n})\nexport class EnquiryListComponent implements OnInit {\n  // data = [\n  //   // {name: 'Kushaal', email: 'kkk@gmail.com', 'mobile': 989898989, course: 'Abacus'}\n  // ]\n  enquiryDataArray: MatTableDataSource<any>\n\n  displayedColumns: string[] = ['name', 'email', 'mobile', 'course', 'actions']\n  dataSource;\n\n  constructor(\n    private enquiryService: EnquiryService\n    ) { \n  }\n\n  ngOnInit(): void {\n    this.enquiryService.getEnquiry().subscribe(enquiryData => {\n      this.enquiryDataArray = new MatTableDataSource(enquiryData.enquiry)\n      console.log(this.enquiryDataArray)\n      this.dataSource = this.enquiryDataArray\n\n      // this.data.push(enquiryData)\n      // console.group(this.data)\n    })\n  }\n\n  onDelete(enqId) {\n    this.enquiryService.deleteEnquiry(enqId)\n      .subscribe((response) => {\n        this.enquiryService.getEnquiry().subscribe(enquiryData => {\n          this.enquiryDataArray = new MatTableDataSource(enquiryData.enquiry)\n          console.log(this.enquiryDataArray)\n          this.dataSource = this.enquiryDataArray\n        })\n        console.log(response)\n      })\n  }\n\n\n}\n","<table mat-table class=\"mat-elevation-z8 data-table\" [dataSource]=\"dataSource\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let data\">{{data.name}}</td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef> Email </th>\n      <td mat-cell *matCellDef=\"let data\">{{data.email}}</td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"mobile\">\n      <th mat-header-cell *matHeaderCellDef> Mobile </th>\n      <td mat-cell *matCellDef=\"let data\">{{data.mobile}}</td>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"course\">\n      <th mat-header-cell *matHeaderCellDef> Course </th>\n      <td mat-cell *matCellDef=\"let data\">{{data.course}}</td>\n    </ng-container>\n\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\n      <td mat-cell *matCellDef=\"let data\">\n        <button (click)=\"onDelete(data.id)\" mat-button color=\"warn\"><mat-icon>delete</mat-icon></button>\n        <button mat-button color=\"accent\" [routerLink]=\"['/enquiry', data.id]\"><mat-icon>edit</mat-icon></button>\n      </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  \n  ","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})\nexport class ServicesComponent implements OnInit {\n\n  opened: boolean;\n  programStructure: boolean;\n  benefits: boolean;\n  FAQs: boolean;\n\n  @ViewChild('sidenav') sidenav: MatSidenav\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    this.programStructure = true;\n    this.benefits = true;\n    this.FAQs = true;\n  }\n\n  onProgramStructure() {\n    this.programStructure = true;\n    this.benefits = false;\n    this.FAQs = false;\n  }\n\n  onBenefits() {\n    this.benefits = true;\n    this.programStructure = false\n    this.FAQs = false;\n  }\n\n  onFAQs() {\n    this.FAQs = true;\n    this.programStructure = false;\n    this.benefits = false\n  }\n\n  displayAll() {\n    this.programStructure = true;\n    this.benefits = true;\n    this.FAQs = true;\n  }\n}\n","<mat-sidenav-container class=\"example-container\">\n    <mat-sidenav class=\"side-nav\" #sidenav mode=\"side\" (keydown.escape)=\"sidenav.close()\" [(opened)]=\"opened\" disableClose>\n        <ul>\n            <li><button mat-button color=\"accent\" (click)=\"displayAll()\">Visual Abacus and Arithmetic</button></li>\n            <li><button mat-button color=\"accent\">Vedic Maths</button></li>\n            <li><button mat-button color=\"accent\">Calligraphy</button></li>\n            <li><button mat-button color=\"accent\" (click)=onProgramStructure()>Program Structure</button></li>\n            <li><button mat-button color=\"accent\" (click)=onBenefits()>Benefits</button></li>\n            <li><button mat-button color=\"accent\" (click)=onFAQs()>FAQs</button></li>\n        </ul>\n    </mat-sidenav> \n\n    <mat-sidenav-content class=\"side-nav-content\">\n        <p>\n            <button mat-button (click)=\"sidenav.toggle()\"><mat-icon>list</mat-icon></button>\n        </p>\n        <div class=\"content-container\">\n            <h1>Abacus</h1>\n            <div class=\"description\">\n                <h3>Taking learning to the Next Level</h3>\n            </div>\n            <div class=\"program\">\n                <div class=\"program-container\" *ngIf=\"programStructure\">\n                    <h1>Program Structure</h1>\n                    <h3>\n                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n                        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n                        when an unknown printer took a galley of type and scrambled it to make a type \n                        specimen book. It has survived not only five centuries, \n                        but also the leap into electronic typesetting, remaining essentially unchanged.\n                    </h3>\n                </div>\n                <div class=\"benefits\" *ngIf=\"benefits\">\n                    <h1>Benefits</h1>\n                    <div class=\"benifit-container\">\n                        <h3>\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n                        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n                        </h3>\n                    </div>\n                </div>\n                <div class=\"FAQs\" *ngIf=\"FAQs\">\n                    <h1>FAQs</h1>\n                    <div class=\"FAQ-container\">\n                        <h3>\n                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n                        Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n                        </h3>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from './auth/auth-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'frontend';\n  constructor(private authService: AuthServiceService) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser()\n  }\n}\n","<app-header></app-header>\n  <router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './material.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './shared/components/header/header.component';\nimport { FooterComponent } from './shared/components/footer/footer.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { EnquiryComponent } from './enquiry/enquiry.component';\nimport { EnquiryFormComponent } from './enquiry/enquiry-form/enquiry-form.component';\nimport { EnquiryListComponent } from './enquiry/enquiry-list/enquiry-list.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { ServicesComponent } from './services/services.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    RegisterComponent,\n    EnquiryComponent,\n    EnquiryFormComponent,\n    EnquiryListComponent,\n    ServicesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private authService: AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegister(form: NgForm) {\n    if(form.invalid) {\n      return;\n    }\n    this.authService.register(form.value.firstname, form.value.lastname, form.value.email, form.value.password)\n    form.resetForm()\n  }\n\n}\n","<mat-card>\n    <div class=\"form-container\">\n    <form #registerForm=\"ngForm\" (submit)=\"onRegister(registerForm)\">\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>First Name</mat-label>\n            <input matInput type=\"text\" name=\"firstname\" ngModel #firstName=\"ngModel\" required>\n            <mat-error *ngIf=\"firstName.invalid\">Please enter first name</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Last Name</mat-label>\n            <input matInput type=\"text\" name=\"lastname\" ngModel #lastName=\"ngModel\" required>\n            <mat-error *ngIf=\"lastName.invalid\">Please enter last name</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput name=\"email\" type=\"email\" ngModel #emailInput=\"ngModel\" required email>\n            <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" name=\"password\" ngModel #passwordInput=\"ngModel\" required>\n            <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password</mat-error>\n        </mat-form-field>\n        <br>\n        <div class=\"btn\">\n            <button type=\"submit\" mat-raised-button>Register</button>\n        </div>\n    </form>\n</div>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EnquiryService } from '../enquiry.service';\n\n@Component({\n  selector: 'app-enquiry-form',\n  templateUrl: './enquiry-form.component.html',\n  styleUrls: ['./enquiry-form.component.css']\n})\nexport class EnquiryFormComponent implements OnInit {\n\n  id = '';\n  sName = '';\n  sEmail = '';\n  sMobile = '';\n  sCourse = '';\n  private mode = 'create'\n\n  constructor(private enquiryService: EnquiryService, private route: ActivatedRoute, private routing: Router ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      const id = param['id']\n      if (id) {\n        this.mode = 'edit'\n        this.enquiryService.getEnquirById(id)\n          .subscribe(response => {\n            console.log(response)\n            this.id = response.data._id,\n            this.sName = response.data.name,\n            this.sEmail = response.data.email,\n            this.sMobile = response.data.mobile,\n            this.sCourse = response.data.course\n          })\n      } else {\n        this.mode = 'create'\n        this.id = null\n      }\n    })\n  }\n\n  onPostEnquiry(form: NgForm) {\n    if(this.mode == 'edit') {\n      this.enquiryService.editEnquiry(this.id, form.value)\n        .subscribe(response => {\n          console.log(response)\n          form.resetForm()\n        })\n    } else {\n      this.enquiryService.postEnquiry(form.value.name, form.value.email, form.value.mobile, form.value.course)\n      form.resetForm()\n      }\n    }\n\n}\n","<mat-card>\n    <form #enquiryForm=\"ngForm\" (submit)=\"onPostEnquiry(enquiryForm)\">\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Name</mat-label>\n            <input matInput type=\"text\" name=\"name\" ngModel #nameInput=\"ngModel\" required [(ngModel)]=\"sName\">\n            <mat-error *ngIf=\"nameInput.invalid\">Please enter your name</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput type=\"email\" name=\"email\" ngModel #emailInput=\"ngModel\" required [(ngModel)]=\"sEmail\">\n            <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Mobile</mat-label>\n            <input matInput name=\"mobile\" type=\"text\" ngModel #mobileInput=\"ngModel\" required [(ngModel)]=\"sMobile\">\n            <mat-error *ngIf=\"mobileInput.invalid\">Please enter a valid number</mat-error>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Course Interested In</mat-label>\n            <input matInput type=\"text\" name=\"course\" ngModel #courseInput=\"ngModel\" required [(ngModel)]=\"sCourse\">\n            <mat-error *ngIf=\"courseInput.invalid\">Please enter the course you are looking for</mat-error>\n        </mat-form-field>\n        <br>\n        <div class=\"btn\">\n            <button type=\"submit\" mat-raised-button color=\"primary\">Submit</button>\n        </div>\n    </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer-container\">\n    <p>&copy; Plus & Minus Abacus Academy</p>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthServiceService } from 'src/app/auth/auth-service.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  userIsAuthenticated = false;\n  authStatusSubs: Subscription;\n\n  constructor(private authService: AuthServiceService) { }\n\n  ngOnInit(): void {\n    this.userIsAuthenticated = this.authService.getAuthStatus()\n    this.authService.getAuthStatusListener()\n      .subscribe(isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated\n      })\n  }\n\n  ngOnDestroy() {\n    this.authStatusSubs.unsubscribe()\n  }\n\n  onLogout() {\n    this.authService.logout()\n  }\n\n}\n","<div class=\"menu-header\">\n    <a mat-button routerLink=\"/\"><mat-icon>sensor_door</mat-icon>Home</a>\n    <a mat-button routerLink=\"/service\"><mat-icon>design_services</mat-icon>Services</a>\n    <a mat-button [matMenuTriggerFor]=\"menu\" *ngIf=\"!userIsAuthenticated\"><mat-icon>account_box</mat-icon>Admin</a>\n    <mat-menu #menu=\"matMenu\">\n        <a mat-menu-item routerLink=\"/login\">Login</a>\n        <a mat-menu-item routerLink=\"/register\">Register</a>\n    </mat-menu>\n    <span class=\"spacer\"></span>\n    <a mat-button routerLink=\"/enquiry\"><mat-icon>contacts</mat-icon>Enquire</a>\n    <a mat-button><mat-icon>info</mat-icon>About Us</a>\n    <button mat-button *ngIf=\"userIsAuthenticated\" (click)=\"onLogout()\">Logout</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private authService: AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogin(form: NgForm) {\n    if(form.invalid) {\n      return;\n    }\n    this.authService.login(form.value.email, form.value.password)\n  }\n\n}\n","<mat-card>\n    <div class=\"form-container\">\n    <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input matInput type=\"email\" name=\"email\" ngModel #emailInput=\"ngModel\" required email>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"form-field\" appearance=\"fill\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\" name=\"password\" ngModel #passwordInput=\"ngModel\" required>\n        </mat-form-field>\n        <br>\n        <div class=\"btn\">\n            <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n        </div>\n    </form>\n</div>\n</mat-card>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Enquiry } from './enquiry.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EnquiryService {\n\n  enquiryList: any;\n  enquiryPostListener = new Subject<any>()\n\n  constructor(private http: HttpClient) { }\n\n\n  postEnquiry(name: string, email: string, mobile: number, course: string) {\n    const enquiryData: Enquiry = { name: name, email: email, mobile: mobile, course: course }\n    this.http.post('http://localhost:3000/enquire', enquiryData)\n      .subscribe(response => {\n        console.log(response)\n      })\n  }\n\n  getEnquiryPostListener() {\n    return this.enquiryPostListener.asObservable();\n  }\n\n  getEnquirById(id: string) {\n    return this.http.get<{data: any}>('http://localhost:3000/enquire/' + id)\n  }\n\n  getEnquiry() {\n    return this.http.get<{ data: any }>('http://localhost:3000/enquire')\n      .pipe(map((response) => {\n        return {\n          enquiry: response.data.map(e => {\n            return {\n              id: e._id,\n              name: e.name,\n              email: e.email,\n              mobile: e.mobile,\n              course: e.course\n            }\n          })\n        }\n      }))\n\n        // .subscribe(transformedRes => {\n        //   console.log(transformedRes)\n        //   this.enquiryList = transformedRes.enquiry\n        //   return this.enquiryList\n        // })\n  }\n\n  editEnquiry(id: string, updatedEnquiry) {\n    return this.http.put('http://localhost:3000/enquire/' + id, updatedEnquiry)\n  }\n\n  deleteEnquiry(id: string) {\n    return this.http.delete('http://localhost:3000/enquire/' + id)\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterComponent } from './auth/register/register.component';\nimport { EnquiryComponent } from './enquiry/enquiry.component';\nimport { HomeComponent } from './home/home.component';\nimport { ServicesComponent } from './services/services.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'enquiry', component: EnquiryComponent},\n  {path: 'enquiry/:id', component: EnquiryComponent},\n  {path: 'service', component: ServicesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatFormFieldControl, MatFormFieldModule} from '@angular/material/form-field';\nimport { MatOptionModule } from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatInputModule} from '@angular/material/input';\nimport { MatTableModule} from '@angular/material/table';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatGridListModule,\n    MatListModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatTableModule\n  ],\n  exports: [\n    CommonModule,\n    RouterModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatGridListModule,\n    MatListModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatTableModule\n  ]\n})\nexport class MaterialModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}